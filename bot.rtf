import imaplib, email
from getpass import getpass


imap_url = 'imap.gmail.com' # This is static. We don't ask the questions we know the answer to
 
user = input("Please enter your email address: ")
password = getpass("Please enter your password: ")
label = input("Please enter the label that you'd like to search: ") # Example: Inbox or Social
search_criteria = input("Please enter the subject search criteria: ")


def get_body(message): 
    if message.is_multipart(): 
        return get_body(message.get_payload(0)) 
    else: 
        return message.get_payload(None, True) 

# Search mailbox (or label) for a key value pair
def search(key, value, con):  
    result, data = con.search(None, key, '"{}"'.format(value)) 
    return data 
   
# Retrieve the list of emails that meet the search criteria
def get_emails(result_bytes): 
    messages = [] # all the email data are pushed inside an array 
    [b'18 20 22']
    for num in result_bytes[0].split(): 
        typ, data = con.fetch(num, '(RFC822)') 
        messages.append(data) 
   
    return messages
    
 
# Authenticate
def authenticate(imap_url, user, password, label):
     
    # SSL connnection with Gmail 
    con = imaplib.IMAP4_SSL(imap_url)  
 
    # Authenticate the user through login
    con.login(user, password)  
 
    # Search for mails under this label
    con.select(label)
 
    return con

con = authenticate(imap_url, user, password, label)

# Retrieve mails
search_results = search('Subject', search_criteria, con)
print('############################')
print(search_results)
print('##############################')
messages = get_emails(search_results) 
   
# Uncomment to view the mail results
print(len(messages))

for message in messages[::-1]:  
         
    for content in message: 
                        
        if type(content) is tuple:  
   
            # Encoding set as utf-8 
            decoded_content = str(content[1], 'utf-8')  
            data = str(decoded_content) 
             
            # Extracting the subject from the mail content
            subject = data.split('Subject: ')[1].split('Mime-Version')[0]
                                       
            # Handling errors related to unicodenecode 
            try:  
                indexstart = data.find("ltr") 
                 
                data2 = data[indexstart + 5: len(data)] 
                 
                indexend = data2.find("</div>") 
                 
                # Uncomment to see what the content looks like
                print(data2[0: indexend]) 
   
            except UnicodeEncodeError as e: 
                pass
